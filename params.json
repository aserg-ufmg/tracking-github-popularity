{"name":"Tracking-Popularity-GitHub","tagline":"Tracking the Popularity of GitHub Applications","body":"### Introduction\r\n\r\nGitHub is the world's largest collection of open source software. Therefore, it is important both to software developers and users to compare and track the popularity of GitHub repositories. In this article, we describe a framework to assess the popularity of GitHub software, using their number of stars. We also illustrate the application of our framework on a snapshot of GitHub, collected on May, 1st, 2015. \r\n\r\n### Measuring Popularity\r\n\r\nWe consider the top-24 programming languages with more repositories in GitHub, which are the languages classified as popular by the GitHub advanced search engine. The following figure shows the distribution of the number of stars in the top-1,000 repositories of such languages. \r\n\r\n![](https://github.com/aserg-ufmg/tracking-github-popularity/blob/master/images/languages.png?raw=true)\r\n\r\nWe consider **popular** the top-10% systems with more stars in our sample of 24,000 systems. Furthermore, we call **very popular** the top-1% systems with more stars. \r\n\r\nThe following table shows the number of popular and very popular systems, per programming language. \r\n\r\n![](https://github.com/aserg-ufmg/tracking-github-popularity/blob/master/images/popular.png?raw=true)\r\n\r\n###Popularity Growth Patterns\r\n\r\nFor evaluating popularity over time, we restrict the analysis to popular systems with at least 52 weeks. In this way, we study 2,138 popular systems (89% of our initial sample). For a given system, we define that _Rt_ is its rank in the list of popular systems in the week _t_ in a logarithm scale (base 2). The ranks are considered in logarithm scale due to the right-skewed distribution in the number of stars of the the popular systems. The rank of the most popular system is 1. The earliest week is the week 1 (aka as _Old_) and the latest one is 52 (aka as _New_). We also define that _RTop_ and _RBottom_ are respectively the highest (best) and lowest rank (worse) of a system in the interval under analysis.\r\n\r\nWe propose the following patterns of popularity growth:\r\n\r\n**Sustainable Growth**: These systems sustained their ranking in the period under analysis, i.e., the number of stars they received in an one-year interval was sufficient to preserve their position in the ranking of popular systems. We use the following relation to express a sustainable growth:\r\n\r\n_(RBottom − RTop ) < 0.25_\r\n\r\nExamples of systems with a sustainable growth:\r\n\r\n![](https://github.com/aserg-ufmg/tracking-github-popularity/blob/master/images/sustainable.png?raw=true)\r\n\r\n**Fast Growth:** These are trending systems, which gained stars in a quantity that resulted in a relevant increase in their position in the ranking of popular systems, as captured by the following relation:\r\n\r\n_(ROld − RNow ) > 1 ∧ (Rt+1 ≤ Rt)_ in at least 90% of the weeks _t_\r\n\r\nExamples of systems with a fast growth:\r\n\r\n![](https://github.com/aserg-ufmg/tracking-github-popularity/blob/master/images/fast.png?raw=true)\r\n\r\n**Slow Growth:** These are systems receiving few stars on each week. As a result, they\r\nexperienced a relevant decrease in their rank position, as represented by the following relation:\r\n\r\n_(RNow − ROld) > 1 ∧ (Rt+1 ≥ Rt)_ in at least 90% of the weeks _t_\r\n\r\nExamples of systems with a slow growth in their number of stars (which resulted in a decrease on their rank):\r\n\r\n![](https://github.com/aserg-ufmg/tracking-github-popularity/blob/master/images/slow.png?raw=true)\r\n\r\n**Viral Growth:** These systems experience a massive growth in their number of stars in a short period of time. Typically, viral growth results from word-of-mouth propagation in social networks (Twitter, Facebook, etc) or social news sites (Hacker News, Slashdot, Reddit, etc). We consider that viral growth happens when a systems receives most of its stars (i.e., > 50%) in a single week. \r\n\r\nExamples of systems with a viral growth:\r\n\r\n![](https://github.com/aserg-ufmg/tracking-github-popularity/blob/master/images/viral.png?raw=true)\r\n\r\nSystems with a sustainable, fast, slow, and viral growth per programming language:\r\n\r\n![](https://github.com/aserg-ufmg/tracking-github-popularity/blob/master/images/growthpatterns.png?raw=true)\r\n\r\n### Correlating Popularity with Forks and Usage\r\n\r\n**Forks:** The following figure shows a plot correlating a system popularity and its number of forks. A logarithm scale is used in both axes. The line represents the identity relation: below the line are the systems with more stars than forks, and above the line the opposite. We can see that there is a strong positive correlation between stars and forks (Spearman rank correlation coefficient = 0.55). \r\n\r\n![](https://github.com/aserg-ufmg/tracking-github-popularity/blob/master/images/forks.png?raw=true)\r\n\r\n**Clients:** To correlate client usage and stars, we focus on a restricted set of applications, composed by Node.js based libraries hosted on the NPM registry. We first retrieved the number of dependents of the popular JavaScript applications in our dataset, using the NPM API. We then manually inspected the top-100 applications in terms of dependents to select the\r\nNode.js-based modules. The following figure shows a plot correlating the values we found for number of stars and number of dependents. We found  a strong correlation between these two measures, with a Spearman’s rank correlation coefficient of 0.68.\r\n\r\n![](https://github.com/aserg-ufmg/tracking-github-popularity/blob/master/images/clients.png?raw=true)\r\n\r\n###Summing Up\r\n\r\nWe proposed a framework to track the popularity of GitHub systems. Using this framework we found that:\r\n\r\n* JavaScript monopolizes more than one third of the popular applications on GitHub; the next five languages (Ruby, Objective-C, Python, Java, and PHP) are responsible for another third of the popular applications. \r\n* 21% of the popular systems have a sustainable growth; 5% have a fast growth; and less than 1% have a slow growth. We also found 37 systems with a viral behavior.\r\n* The number of stars of a system tends to correlate not only with the number of forks, but also with its effective usage by other client applications\r\n\r\n###More Info\r\n\r\nHudson Borges, Marco Tulio Valente, Andre Hora, Jailton Coelho. On the Popularity of GitHub Applications: A Preliminary Note. [arXiv:1507.00604](http://arxiv.org/abs/1507.00604)","google":"UA-8249107-3","note":"Don't delete this file! It's used internally to help with page regeneration."}